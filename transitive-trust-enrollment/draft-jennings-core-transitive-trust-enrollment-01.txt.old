


Network Working Group                                        C. Jennings
Internet-Draft                                                     Cisco
Intended status:  Experimental                        September 23, 2012
Expires:  March 27, 2013


          Transitive Trust Enrollment for Constrained Devices
           draft-jennings-core-transitive-trust-enrollment-01

Abstract

   This document provides a sketch of a rendezvous protocol that allows
   constrained internet devices such as sensors to securely connect into
   a system that uses them.  The solution is based on the idea that each
   device will be manufactured with a one time password that can be used
   by the customer to tell the device which controller to enroll with
   and the device is manufactured to contact a given Transfer Server
   that is used to tell the device which system to connect to.  The
   administrator of the device can get this one time password from the
   device using a QR code then use that one time password to to inform a
   Transfer Server which system the device should connect to.  The
   device will contact the Transfer Agent, get this information, then
   connect to the appropriate system.

Status of this Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on March 27, 2013.

Copyright Notice

   Copyright (c) 2012 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents



Jennings                 Expires March 27, 2013                 [Page 1]

Internet-Draft         Transitive Trust Enrollment        September 2012


   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.


Table of Contents

   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3
   2.  Enrollment Information Flow  . . . . . . . . . . . . . . . . .  4
   3.  QR Code  . . . . . . . . . . . . . . . . . . . . . . . . . . .  6
   4.  Transfer Agent API . . . . . . . . . . . . . . . . . . . . . .  6
     4.1.  Create . . . . . . . . . . . . . . . . . . . . . . . . . .  7
       4.1.1.  Example  . . . . . . . . . . . . . . . . . . . . . . .  7
     4.2.  Setup  . . . . . . . . . . . . . . . . . . . . . . . . . .  7
     4.3.  Bind . . . . . . . . . . . . . . . . . . . . . . . . . . .  7
     4.4.  Fetch  . . . . . . . . . . . . . . . . . . . . . . . . . .  7
       4.4.1.  Example  . . . . . . . . . . . . . . . . . . . . . . .  7
   5.  Controller API . . . . . . . . . . . . . . . . . . . . . . . .  8
     5.1.  Test Alive . . . . . . . . . . . . . . . . . . . . . . . .  8
     5.2.  Add  . . . . . . . . . . . . . . . . . . . . . . . . . . .  8
     5.3.  Sensor Update  . . . . . . . . . . . . . . . . . . . . . .  8
   6.  Security Considerations  . . . . . . . . . . . . . . . . . . .  8
   7.  Variations . . . . . . . . . . . . . . . . . . . . . . . . . .  9
     7.1.  LED Based Enrollment . . . . . . . . . . . . . . . . . . .  9
     7.2.  Bulk Enrollment  . . . . . . . . . . . . . . . . . . . . .  9
     7.3.  Public Key Crypto  . . . . . . . . . . . . . . . . . . . .  9
   8.  Implementation Notes . . . . . . . . . . . . . . . . . . . . .  9
     8.1.  Random Numbers . . . . . . . . . . . . . . . . . . . . . . 10
   9.  Open Issues  . . . . . . . . . . . . . . . . . . . . . . . . . 10
   10. IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 10
   11. Acknowledgments  . . . . . . . . . . . . . . . . . . . . . . . 10
   12. Appendix A: JOSE SHA224-CFB  . . . . . . . . . . . . . . . . . 10
   13. References . . . . . . . . . . . . . . . . . . . . . . . . . . 11
     13.1. Normative References . . . . . . . . . . . . . . . . . . . 11
     13.2. Informative References . . . . . . . . . . . . . . . . . . 11
   Author's Address . . . . . . . . . . . . . . . . . . . . . . . . . 11











Jennings                 Expires March 27, 2013                 [Page 2]

Internet-Draft         Transitive Trust Enrollment        September 2012


1.  Introduction

   Secure enrollment of devices into internet-based systems has never
   been easy.  The constrained devices that need to be enrolled into
   systems today face many challenges.  Typically, simple devices have
   no user interface such as a keyboard or screen - they may have only a
   single button or LED.  At the time they are installed, there may not
   be a working network or even power.  However, these devices are being
   used for applications that are increasingly important and safety-
   critical, so they need to have reasonable security and privacy
   characteristics.  This documents specifies an enrollment system for
   such devices.

   In many systems, there is a need to configured a Device, such as a
   sensor or actuator, so that it is controlled by some specific
   controller.  In the case Devices like a switch and light, it may be
   that all the Controller does is later configure the switch to control
   the light.  To make this happen, both Devices need to be under the
   control of a common Controller that is authorized to make changes to
   the Devices.

   The simplified high-level information flow is illustrated in the
   following figure.  The goal is to get to the point where the Device
   knows that it should be talking to the Controller.
   TODO ASCII FIGURE

   When the Manufacturer builds the Device, it includes an One Time
   Password (OTP) that the Introducer can use to enroll the Device with
   the Controller.  The Manufacturer also runs a website known as the
   Transfer Agent that knows the OTP for every device that use that
   Transfer Agent.  The Device can include the OTP as a QR code on the
   outside of the Device.  When the Device is installed, the network
   administrator or installer uses a software agent known as the
   Introducer.  The Introducer would typically be simply a normal
   browser running on an smart phone with a camera that can read QR
   codes.  When the Device is installed, the Introducer can scan the QR
   code on the Device.  This QR code includes a URL to the Transfer
   Agent along with the OTP and a separate Device secret DevSecret.
   (Message 1).  The Introducer then contacts the Transfer Agent and
   uses the OTP to tell the Transfer Agent which Controller this Device
   should use (Message 2).  The Introducer can also tell the Controller
   the DevSecret (Message 3).  Later, the first time the Device boots up
   and gets network connectivity, it contacts the Transfer Agent, and
   the Transfer Agent tells the Device which Controller to talk to
   (Message 4).  From that point on, any time the Device boots, the
   Device can communicate directly with the Controller (Message 5).  The
   actual message flow is slightly more complicated and shown in
   Section 2, but it uses the same basic idea as this simplified flow.



Jennings                 Expires March 27, 2013                 [Page 3]

Internet-Draft         Transitive Trust Enrollment        September 2012


   The system is designed to achieve several desirable properties:
   o  Can work for Devices with very limited memory and processing
      power.
   o  Does not require network or power to be available when the Device
      is installed.
   o  Is fairly secure (see more in the security section).
   o  Minimal addition to manufacturing costs.
   o  The installer can detect if the OTP has already been used.
   o  Provides a work flow in which a Device does not need to be taken
      out of the box to be enrolled.  This can be very important to
      enable consumers themselves to enroll devices they buy from a
      service provider.
   o  Works with common Firewall and NAT network topologies.

   One of the key steps in making this system work is getting the OTP
   from the Device to Introducer.  The approach used here is using a QR
   code representing a URL.  The QR code is printed on the Device and/or
   box it comes in.

   The semantic level information in each message is discussed in
   Section 2 and the syntax of the messages is discussed in Section 4
   and Section 5.  The security properties of the system are described
   in Section 6.

   The Device uses HTTP or COAP to communicate with the controller.  The
   Transfer Agent and Introducer use HTTP to communicate with various
   entities.  There are two bits of keying material used for
   cryptographic operations.  Th first is the One Time Password (OTP)
   that is passed via QR code from the device to the Introducer then the
   Introducer uses to authorize itself to the Transfer Agent.  There is
   also a DevSecret that is used to secure communications between the
   Device and the Controller.  The Transfer Agent needs a normal
   certificate to use HTTPS.

   It is assumed that the Device may have a NAT between it and the
   Controller and that the Device is on the inside of the NAT.  The
   Transfer Agent is assumed to be a generally accessible server on the
   internet but the Controller and Device can be on the inside of a
   Firewall or NAT between them and the Transfer Agent.


2.  Enrollment Information Flow

   In the following message flow we use the following definitions:







Jennings                 Expires March 27, 2013                 [Page 4]

Internet-Draft         Transitive Trust Enrollment        September 2012


   TaURL  A http URL that can be used to reach the Transfer Agent.
   DevURN  A globally unique URN assigned by the Manufacturer to
      uniquely identify this Device.  This SHOULD be one of the URNs
      from [I-D.arkko-core-dev-urn].
   OTP  The One Time Password created by the Manufacturer for enrolling
      the Device.  This is TODO bytes of cryptographically random data.
   DevSecret  The secret created by the Manufacturer for the device to
      communicated with the Controller.  This is TODO bytes of
      cryptographically random data.
   ContURL  This is a URL that provides the address to reach the
      controller.  It can have a scheme of http, https, coap, or coaps.
   DevLabel  A locally significant string that the Introducer can assign
      to a Device.  For example, the convention for a thermostat in
      building 30, floor2, office 361 might be assign the string "BLD30/
      2/361 - Thermostat".  This string is provided purely as a way to
      let the Introducer and Controller exchange information that may be
      useful for the use installing the system.

   The information flow is illustrated in the following figure.  The
   goal is get to the point where the Device knows that it should be
   talking to the Controller, the Controller knows it should be talking
   the Device, and the Device and Controller can communicate and
   authenticate each other using the DevSecret.

   TODO

   When the Manufacturer builds the Device, it includes a One Time
   Password (OTP) on the device, a DevSecret, and the URN for the
   Devices (DevURN).  It also creates a QR code on the device that
   contains the URL to the transfer agent (TaURL), the URN for the
   Device (DevURL), the OTP, and the DevSecret.  This QR codes is
   described in detail in section TODO.  This is corresponds to message
   1 in the above figure.

   The Manufacturer also tells the Transfer Agent one the OTP is for the
   Particular DevURN.  (Message 2)

   When the Device is installed, the Introducer reads OTP, DevSecret,
   DeviceURN, and the URL for the Transfer Agent (TaURL) from the Device
   (Message 3) by scanning the QR code on the device.  If the Introducer
   is a web browser, it will use the Transfer Agent URL to fetch an HTML
   user interface to perform the next steps.  In messages 5, the user
   interface on the Introducer will allow the user to user to enter the
   URL for Controller (ContURL) and an optional label for the device
   (DevLabel).

   Next the controller uses tells the Transfer Agent the Controller URL
   to use for this DeviceURN.  This request is authenticated by the



Jennings                 Expires March 27, 2013                 [Page 5]

Internet-Draft         Transitive Trust Enrollment        September 2012


   Transfer Agent using the OTP (message 6).

   Later the Device contacts the Transfer Agent and the Transfer Agent
   tells the Device the URL of the Controller to talk to (ContURL) in
   message 8 and 9).  From that point on, any time the Device boots, it
   can directly communicate with the Controller (Message 10 and 11).
   The Controller and Device both know the DevSecret for the device and
   can use that to authenticated and encrypt communications between
   them.  It is suggested that the first thing the Controller and Device
   do is use this DevSecret to securely replace it with some different
   secret that is not known to anyone that saw the QR code.

   Open Issue:  should we add in an additional ContSecret that is picked
   by controller, passed to Introducer, then to Trust Agent, then to
   Device?


3.  QR Code

   The QR code for the Device MUST be an HTTPS URL that points at the
   appropriate Transfer Agent.  The path MUST be formed by concatenating
   ".well-known/tte1/setup" and the DevURN.  It MUST include the OTP as
   a hex encoded value for a parameter called otp.  The secret MUST be
   encoded in hex and used as the fragment identifier of the URL.  The
   reasons the secret is put as a fragment is so that if the Introducer
   scans the QR code and dereferences the URL with a web browser, the
   fragment identifier is not transferred in the request to the Transfer
   Agent.

   As an example, if the Transfer Agent's domain example.net, a valid
   URL for the QR code would be:

   https://example.net/.well-known/tte1/setup/urn:dev:mac:90a2da001a0c
       ?otp=88F5EC91493E473B758159C7792C#00004DCFDCDBD9F54C1B2E71FC22

   The QR code SHOULD use an error coding level of "H".  This would
   generate the following QR code:

   QR code in ASCII art left as an exercise to
   the reader but there is one in the PDF version.


4.  Transfer Agent API

   Note that future version of the API that needed to increment a
   version number would do it by changing the tte1 to tte2.





Jennings                 Expires March 27, 2013                 [Page 6]

Internet-Draft         Transitive Trust Enrollment        September 2012


4.1.  Create

   The HTTP REST API allow the manufacture to tell the Transfer Device
   about the DevURN and OTP for a given device the Manufacture has
   created.

   Path:  foo/bar
      YADA
   Methods:  foo/bar
   Parameters:
      foo:  foo/bar
      bar:  foo/bar
   Return Values:

4.1.1.  Example

   TODO

4.2.  Setup

   Transfer Agent MUST return a web page that allows the user to enter
   the

4.3.  Bind

   TODO MUST be sent over TLS, and the Introducer MUST verify that the
   HTTPS certificate of the Transfer Agent matches the URL.

   Once the Transfer Agent has successfully stored the Controller's
   address for a given OTP, it MUST NOT allow that OTP to be used again
   to store an address for that Device.

4.4.  Fetch

   TODO

   Path:  foo/bar
      YADA
   Methods:  foo/bar
   Parameters:
      foo:  foo/bar
      bar:  foo/bar
   Return Values:

4.4.1.  Example

   TODO




Jennings                 Expires March 27, 2013                 [Page 7]

Internet-Draft         Transitive Trust Enrollment        September 2012


5.  Controller API

5.1.  Test Alive

   TODO

5.2.  Add

   TODO

5.3.  Sensor Update

   TODO


6.  Security Considerations

   This section has not really been started and needs lots of work.

   TODO - Discuss how one can replace a dead Controller with a new one
   in an operational network.  The short answer is likely that one needs
   to back up the keys of the old Controller and move these to the new
   Controller.

   What happens if the OTP is stolen during Device transit?  The short
   answer is that the Device is compromised at this point and needs to
   be discarded or returned to the manufacture to get a new OTP.  The
   Introducer needs to detect that this has happened and warn the user.

   There are additional concerns about Devices that may be operational
   without ever being introduced to a Controller.  For example, if a
   light switch supported this protocol, but could also be used just as
   a stand alone light switch, there is a risk the OTP could be stolen
   by an attacker, with the attacker enrolling the Device to the
   attacker's Controller.  When the correct user installs the light
   switch, if they never bother to try to Introduce it to anything, they
   will not detect that it has been compromised.  One way to mitigate
   this risk might be to include some manual configuration on the Device
   to indicate that it is to be used in stand-alone mode, such as a
   jumper that can be cut.

   Network topology consideration - Introducer can install firewall
   rules that allow Devices to contact Transfer Agent.

   Explain why works with NATs / FWs.






Jennings                 Expires March 27, 2013                 [Page 8]

Internet-Draft         Transitive Trust Enrollment        September 2012


7.  Variations

7.1.  LED Based Enrollment

   An alternative to QR codes is to have an LED on the Device flash out
   the relevant information to the Introducer.  The output string is
   formed by concatenating a 16-bit start of message constant value of
   0x0001, followed by the TaURN, DevURN, OTP, DevSecret and then an
   8-bit two's compliment checksum value computed over the previous
   bytes, including the start of message constant.  All values are in
   network byte order.  The resulting string is output using Non-Return-
   to-Zero Inverted (NRZI) encoding on the LED at a baud rate of 15 bps.
   This allows a Device such as a smartphone with video capture to
   detect the signal and recover the information.

   TODO - see if this works at 30 bps.  See about encoding multiple
   intensity levels or colors in the LED.  Initial experiments indicate
   this does not work very well as auto contrast in the video camera
   tends to saturate LED range.  Would an Adler-32 checksum be better?

7.2.  Bulk Enrollment

   Imagine one wants to enroll a whole box of sensors.  We should define
   some scheme where one can simply bar code something on the outside of
   a box and can bulk enroll all the sensors in the box.  Perhaps have a
   scheme where there is a master secret and start and end DevURN on the
   outside of box bar code.  Then the OTP for a given Device is
   generated using the master secret and DevURN of that Device.  Need to
   sort out details of a scheme like this.

7.3.  Public Key Crypto

   The examples here assumed that COAP was being used with DTLS in Pre
   Shared Key (PSK) mode.  It would also be possible to use DTLS with
   self signed certificates with a very similar flow, where the
   Introducer provided the Transfer Agent with the finger of the
   certificate or public key of Controller.


8.  Implementation Notes

   The system described here can be implemented on a very small device.
   An implementations for Arduino with ethernet was done that includes
   all the parts described here including SENML, JSON, the encryption
   and signing, HTTP, DNS, and DHCP.  It also included libraries for
   reading a 1-wire temperature sensor.  This fit in under 32k of flash,
   and uses less than 4k or ram on an 8 bit AVR processor.  That means
   the cost for embedded processor in volume with this much flash, ram,



Jennings                 Expires March 27, 2013                 [Page 9]

Internet-Draft         Transitive Trust Enrollment        September 2012


   etc is very roughly $1.50 USD in 2012.  A key part of getting this to
   be small is the extremely small crypto footprint from using SHA224-
   CFB.

8.1.  Random Numbers


9.  Open Issues

   The references section is in serious need of work - let me know stuff
   that should be added to it.

   Does QR encoding of L work out better than H?

   Is there any advantage in having the HTTP URL in well-known space?

   Is there some clever way (perhaps zeroconf) for the Introducer to
   discover the ContURL?


10.  IANA Considerations

   TODO register .well-known HTTP URL


11.  Acknowledgments

   Some of the fundamental ideas in this draft where inspired by Max
   Pritikin's work on Transitive Trust Introduction.  Randy Bush
   provided crisp and excellent advice on what the security properties
   of the solutions should be.  I'd like to thank the following people
   for review comments:  Eric Rescorla, Jari Arkko, Lyndsay Campbell,
   and Zach Shelby.


12.  Appendix A: JOSE SHA224-CFB

   Note:  This section will eventually be moved to an experimental draft
   submitted to JOSE WG.

   This section describes how to create a JOSE object as described by
   [I-D.barnes-jose-jsms] that is encrypted and signed with SHA224-CFB
   as specified in [HashCFB].

   This adds a new ENCRYPTION algorithm called sha224-cfb to
   [I-D.barnes-jose-jsms].  This takes one parameter named "n" which
   represents the nonce as defined in [HashCFB].  It is RECOMMENDED that
   they key be 14 bytes long and the nonce is 24 bytes of data.  The



Jennings                 Expires March 27, 2013                [Page 10]

Internet-Draft         Transitive Trust Enrollment        September 2012


   authentication information from the algorithm is stored in the "mac"
   field.

   TODO example.  Todo fix to base64 instead of hex encoding.  TOOD talk
   to Barnes about keyID and case with no key wrap.  TODO - state of
   sha224-cfb and this is all experimental.


13.  References

13.1.  Normative References

   [HashCFB]  Forler, C., McGrew, D., Lucks, S., and J. Wenzel, "Hash-
              CFB: Authenticated Encryptions without a Block Cipher",
              Directions in Authenticated Ciphers Workshop , July 2012.

   [I-D.barnes-jose-jsms]
              Barnes, R., "JavaScript Message Security Format",
              draft-barnes-jose-jsms-00 (work in progress), June 2012.

   [I-D.ietf-core-coap]
              Shelby, Z., Hartke, K., Bormann, C., and B. Frank,
              "Constrained Application Protocol (CoAP)",
              draft-ietf-core-coap-08 (work in progress), October 2011.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC2616]  Fielding, R., Gettys, J., Mogul, J., Frystyk, H.,
              Masinter, L., Leach, P., and T. Berners-Lee, "Hypertext
              Transfer Protocol -- HTTP/1.1", RFC 2616, June 1999.

13.2.  Informative References

   [I-D.arkko-core-dev-urn]
              Arkko, J., Jennings, C., and Z. Shelby, "Uniform Resource
              Names for Device Identifiers", draft-arkko-core-dev-urn-01
              (work in progress), October 2011.

   [I-D.jennings-senml]
              Jennings, C., Shelby, Z., and J. Arkko, "Media Types for
              Sensor Markup Language (SENML)", draft-jennings-senml-07
              (work in progress), October 2011.








Jennings                 Expires March 27, 2013                [Page 11]

Internet-Draft         Transitive Trust Enrollment        September 2012


Author's Address

   Cullen Jennings
   Cisco
   170 West Tasman Drive
   San Jose, CA  95134
   USA

   Phone:  +1 408 421-9990
   Email:  fluffy@iii.ca









































Jennings                 Expires March 27, 2013                [Page 12]

