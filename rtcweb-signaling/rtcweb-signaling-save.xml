
       <!--
note right of CalleeUA: User alerted

CalleeUA->CalleeJS: sendSignalingChannel();
CalleeJS->CallerJS: {"type":"TENTATIVE_ANSWER", "sdp":"..."}
note right of CallerJS: This SDP has ICE candidates
CallerUA->CalleeUA: More ICE checking
CallerJS->CallerUA: peer->processSignalingMessage();
CallerUA->CallerJS: onstatechange();
note left of CallerUA: Might have media flowing at this point
-->


            <!--
            <t>The callee sends a TENTATIVE_ANSWER message to indicate that the OFFER
            has been received and provide initial media parameters
            (most-likely for one-way media) and ICE candidates.</t>
-->


        <!--
        <section anchor="sec.TENTATIVE_ANSWER" title="TENTATIVE_ANSWER">
          <t>The TENTATIVE_ANSWER is an optional message is used to
          acknowledge that the OFFER has been received and indicate the
          receiver is ready to start ICE negotiation and possible exchange
          media but is not yet ready to commit to which codecs and other media
          parameters will be used. The receiver is keeping open the
          possibility of in the future sending an ANSWER which commits to a
          given set of media parameters for that offer / answer exchange. Note
          that a tentative answer does not necessarily imply that a complete
          answer will be sent because the browser may ultimately decide not to
          answer. However, as with SIP tentative answer allows for
          connectivity establishment, security negotiation, and one-way media
          from the callee to the caller prior to the ANSWER answer <xref
          target="sec.ANSWER"></xref>.</t>

          <t>If the browser subsequently decides to continue the media
          session, it will then send a ANSWER <xref
          target="sec.ANSWER"></xref> message. Note that the ANSWER message
          MAY have different media parameters than the TENTATIVE_ANSWER.</t>

          <t>The TENTATIVE_ANSWER message MUST contain the callee's
          calleeSessionId for this call and an sdp parameter containing ICE
          candidates and provisional media parameters.</t>

          <t><list style="hanging">
              <t hangText="Design Note:">If there was no need to interoperate
              with the SIP Offer/Answer model, we could consider alternative
              designs that add the callee send an ANSWER instead of a
              TENTATIVE_ANSWER then later the callee would send a new OFFER
              instead of an ANSWER when the callee was ready to commit to a
              given set of media codecs. However, SIP Offer/Answer does not
              work that way and using that design here would require the
              signalling GW that received a SIP Tentative Answer, to use that
              as an answer. Later when the signalling gateway received an
              answer form the SIP side, the signalling gateway would have to
              create an OFFER and deal with whatever answer got sent to that
              OFFER. This is close to impossible for the signalling gateway to
              do unless the signaling gateway can anchor the ports and control
              both sides of session in classic B2BUA style. Given the desire
              to build a signaling gateway that does not have to relay media,
              we do not see any way to make a signalling gateway that supports
              only offer/answer on the web side while supporting
              offer/tentative offer/anwer on the SIP side. The proposal in
              this draft is to reuse the SDP Offer / Answer model from SIP and
              that involves both answer and tentative answers.</t>
            </list></t>
        </section>
-->

  
